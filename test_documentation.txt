			Тестовая документация — 
это набор документов, создаваемых перед началом процесса тестирования и непосредственно в процессе. 
Эти документы описывают покрытие тестами и процесс выполнения тестов, 
в них указываются необходимые для тестирования вещи, приводится основная терминология и т. д.


			тест план (test plan)
Test plan. A document describing the scope, approach, resources and schedule of intended test 
activities. It identifies amongst others test items, the features to be tested, the testing tasks, 
who will do each task, degree of tester independence, the test environment, the test design techniques 
and entry and exit criteria to be used, and the rationale for their choice, and any risks 
requiring contingency planning. It is a record of the test planning process. 
[ISTQB Glossary]
План тестирования описывает все действия по тестированию в рамках одного проекта. 
Здесь информация обо всем, что нужно сделать тестировщику или команде QA в ходе проекта. 
В каждом плане тестирования указывается объект тестирования, график работы, 
критерии начала и окончания тестирования, стратегия, риски и список выполненных работ.
Также часто в (test plan) включается стратегия тестирования, график релизов на  несколько 
ближайших спринтов. В зависимости от команды бывает разная степень детализации (test plan) 
и его могут делать разные люди в команде.(менеджер или тестировщик мидл+)
Обычно план тестирования делается до начала тестирования и до момента релиза.
имеет разный форм-фактор;
составляется не более, чем на 2-х страницах;
	задачи 
• оценка объёма и сложности работ;
• определение необходимых ресурсов и источников их получения;
• определение расписания, сроков и ключевых точек;
• оценка рисков и подготовка превентивных контрмер;
• распределение обязанностей и ответственности;
• согласование работ по тестированию с деятельностью участников проектной 
команды, занимающихся другими задачами.
	свойства качественного тест-плана
• Реалистичность (запланированный подход реально выполним).
• Гибкость .
• Согласованность с общим проектным планом и иными отдельными планами (например, планом разработки)
	виды тест плана
мастер (для всех команд на одном проекте)
детальный (для каждой команды итерации, релиза)
план приемочных испытаний
	Тест план должен отвечать на следующие вопросы:
Что необходимо протестировать?
Как будет проводиться тестирование?
Когда будет проводиться тестирование?
Критерии начала тестирования.
Критерии окончания тестирования.
	структура тест плана:
виды тестирования
приоритет тестирования
области подвергаемые тестированию и неподвергаемые
стратегия тестирования
окружение(аппаратное, програмное, человеческие ресурсы)
роли и ответственность на проекте
тестовая документация
техники тест-дизайна
баг-трекинг
критерии
	Критерии начала тестирования (entry criteria)
	Приёмочные критерии, критерии качества (acceptance criteria)
	Критерии приостановки тестирования (suspension criteria)
	Критерии возобновления тестирования (resumption criteria)
	Критерии завершения тестирования (exit criteria)
инструменты для работы(Jira. таблицы Excel. Postman и тд)
оценки качества\ метрики
Acceptance criteria. The exit criteria that a component or system must satisfy in order to be 
accepted by a user, customer, or other authorized entity. 
[ISTQB Glossary]
Entry criteria. The set of generic and specific conditions for permitting a process to go 
forward with a defined task, e.g. test phase. The purpose of entry criteria is to prevent a task from 
starting which would entail more (wasted) effort compared to the effort needed to remove the failed 
entry criteria.
[ISTQB Glossary]
Suspension criteria. The criteria used to (temporarily) stop all or a portion of the testing 
activities on the test items. 
[ISTQB Glossary]
Resumption criteria. The criteria used to restart all or a portion of the testing activities that 
were suspended previously. 
[ISTQB Glossary]
Exit criteria. The set of generic and specific conditions, agreed upon with the stakeholders 
for permitting a process to be officially completed. The purpose of exit criteria is to prevent a 
task from being considered completed when there are still outstanding parts of the task which have not 
been finished. Exit criteria are used to report against and to plan when to stop testing. 
[ISTQB Glossary]

ссылки
https://habr.com/ru/company/true_engineering/blog/428053/  (это тест план, не тест стратегия!!)
https://testmatick.com/ru/kak-pisat-plan-testirovaniya/
http://www.protesting.ru/testing/plan.html





			Тест дизайн (Test Design) 
это этап процесса тестирования ПО, на котором проектируются и создаются тестовые случаи 
(тест кейсы)(этап планирования и проектирования тестов), в соответствии с определёнными ранее 
критериями качества и целями тестирования.
	План работы над тест дизайном
анализ имеющихся проектных артефактов: документация (спецификации, требования, планы), 
модели, исполняемый код и т.д.
оценка рисков
написание спецификации по тест дизайну (Test Design Specification)
проектирование и создание тестовых случаев (Test Cases)
Разграничить тесты на приемочные, критические, расширенные
	Цели тест дизайна
Обеспечить покрытие функционала приложения тестами:
Тесты должны покрывать весь функционал
Тестов должно быть минимально достаточно
	основная задача сводится к тому, чтобы используя различные стратегии и техники тест дизайна, 
создать набор тестовых случаев, обеспечивающий оптимальное тестовое покрытие тестируемого приложения.





			тестовая стратегия
может быть отдельным документом либо же частью тест-плана
	этапы тест-стратегии
сбор информации
анализ информации
принятие решений (какие виды тестирования будут применятся в проекте)
презентация(менеджменту или команде, разрабам, тестировщ, бизнес аналитику)
	кто составляет
менеджер
тестировщик(уровня Middle+)
	что включает?
цель тестирования
(для чего будет использоваться конретный вид тестирования, чтобы добится результата)
информация о продукте
виды тестирования
критерии начала и окончания тестирования
Test strategy. A high-level description of the test levels to be performed and the testing within 
those levels (group of test activities that are organized and managed together, e.g. component test, 
integration test, system test and acceptance test) for an organi￾zation or program (one or more projects)
[ISTQB Glossary]





			чек лист (checklist)
список проверок и результат етих проверок
это документ, который описывает что должно быть протестировано. Чек-лист может быть 
абсолютно разного уровня детализации.
Чаще всего чек-лист содержит только действия, без ожидаемого результата. Чек-лист менее формализован.
	АТРИБУТЫ ЧЕК-ЛИСТА
версия сборки (билда)
окружение на котором проводилось тестирование
дата проведения теста
тестировщик который проводил тестирование
тип тестов
названия тестов
результат тестов
может содержаться уникальный ID теста
  чек-лист используется на не сложных проектах и не продолжительных по времени





			тест кейс
Тест-кейс — это последовательность шагов, которые приводят к какому-то результату.
пошаговый сценарий, в котором описываем как мы будем тестировать
	Атрибуты тест-кейса:
предусловия (опционально, если они требуются для тест-кейса);
идентификатор (уникальный номер, по которому вы сможете найти этот тест-кейс и на него сослаться);
Заголовок(название сценария (какое-то краткое, но ёмкое));
ссылка на требования ;
шаги сценария;
ожидаемый результат;
фактический результат (опционально).
приоритет(опционально)порядок выполнения проверок
  тестовые кейсы могут собираться в тестовые наборы(test suite)
тест кейс используется на более сложных проектах, где нужна детализация,
и на более долгих проектах, если велика вероятность прихода новых специалистов, если часто меняется 
команда, с течением времени, на проекте также исп. тест кейс
тест кейсы очень сложно поддерживать, по этому их используют на проектах где требования 
не меняются часто





			тестовый набор (test suite)
набор тесткейсов, в котором выполнение тесткейса может быть предусловием для выполнения следующего
кейсы идут друг за другом по порядку





			пользовательская история (User Story)
способ описания требований к разрабатываемой системе, сформулированных как одно или несколько 
предложений на повседневном или деловом языке пользователя. Пользовательские истории – это 
один из самых быстрых способов документирования требований клиента 
(цель документирования состоит в том, чтобы оперативно, без затрат реагировать на возникающие изменения).
Главное действующее лицо User story – это некий персонаж, который будет совершать какие-либо 
действия с нашим тестируемым продуктом с учетом его потребностей. 
Персонаж сопровождается описанием проблем, которые он может (и хочет) решить с помощью нашего продукта. 
Потребность представляет собой тезис в 1-2 предложения. Для одного пользователя может быть 
разработано несколько (например, 4-6) User Story.
Персонаж – типичный представитель целевой аудитории компании




			баг репорт(bug report)
Дефект (bug) — отклонение фактического результата от ожидаемого.
Отчёт о дефекте (bug report) — документ, который содержит отчет о любом недостатке в 
компоненте или системе, который потенциально может привести компонент или систему к 
невозможности выполнить требуемую функцию.
	Атрибуты отчета о дефекте:
Уникальный идентификатор (ID) — присваивается автоматически системой при создании баг-репорта.
Тема (краткое описание, Summary) — кратко сформулированный смысл дефекта, отвечающий на вопросы: 
Что? Где? Когда(при каких условиях)?
Подробное описание (Description) — более широкое описание дефекта (указывается опционально).
Шаги для воспроизведения (Steps To Reproduce) — описание четкой последовательности действий, 
которая привела к выявлению дефекта. В шагах воспроизведения должен быть описан каждый шаг, 
вплоть до конкретных вводимых значений, если они играют роль в воспроизведении дефекта.
Фактический результат (Actual result) — описывается поведение системы на момент обнаружения дефекта 
в ней. чаще всего, содержит краткое описание некорректного поведения
(может совпадать с темой отчета о дефекте).
Ожидаемый результат (Expected result) — описание того, как именно должна работать система в соответствии с 
документацией.
Вложения (Attachments) — скриншоты, видео или лог-файлы.
Серьёзность дефекта (важность, Severity) — характеризует влияние дефекта на работоспособность приложения.
Приоритет дефекта (срочность, Priority) — указывает на очерёдность выполнения задачи или 
устранения дефекта.
Статус (Status) — определяет текущее состояние дефекта. Статусы дефектов могут быть разными в разных 
баг-трекинговых системах.
Окружение (Environment) – окружение, на котором воспроизвелся баг.
		Severity vs Priority
Серьёзность (severity) показывает степень ущерба, который наносится проекту существованием дефекта. 
Severity выставляется тестировщиком.
Градация Серьезности дефекта (Severity):
	Блокирующий (S1 – Blocker)
тестирование значительной части функциональности вообще недоступно. Блокирующая ошибка, 
приводящая приложение в нерабочее состояние, в результате которого дальнейшая работа с 
тестируемой системой или ее ключевыми функциями становится невозможна.
	Критический (S2 – Critical)
критическая ошибка, неправильно работающая ключевая бизнес-логика, дыра в системе безопасности, 
проблема, приведшая к временному падению сервера или приводящая в нерабочее состояние некоторую 
часть системы, то есть не работает важная часть одной какой-либо функции либо не работает 
значительная часть, но имеется workaround(обходной путь/другие входные точки), позволяющий 
продолжить тестирование.
	Значительный (S3 – Major)
не работает важная часть одной какой-либо функции/бизнес-логики, но при выполнении специфических условий, либо 
есть workaround, позволяющий продолжить ее тестирование либо не работает не очень значительная 
часть какой-либо функции. Также относится к дефектам с высокими visibility – 
обычно не сильно влияющие на функциональность дефекты дизайна, которые, однако, сразу бросаются в глаза.
	Незначительный (S4 – Minor)
часто ошибки GUI, которые не влияют на функциональность, но портят юзабилити или внешний вид. 
Также незначительные функциональные дефекты, либо которые воспроизводятся на определенном устройстве.
	Тривиальный (S5 – Trivial)
почти всегда дефекты на GUI — опечатки в тексте, несоответствие шрифта и оттенка и т.п., 
либо плохо воспроизводимая ошибка, не касающаяся бизнес-логики, проблема сторонних библиотек 
или сервисов, проблема, не оказывающая никакого влияния на общее качество продукта.
		Срочность (priority) показывает, как быстро дефект должен быть устранён. 
Priority выставляется менеджером, тимлидом или заказчиком
	Градация Приоритета дефекта (Priority):
	P1 Высокий (High)
Критическая для проекта ошибка. Должна быть исправлена как можно быстрее.
	P2 Средний (Medium)
Не критичная для проекта ошибка, однако требует обязательного решения.
	P3 Низкий (Low)
Наличие данной ошибки не является критичным и не требует срочного решения. Может быть исправлена, когда у команды 
появится время на ее устранение.



 

			Требования (requirements specification)
Спецификация требований или просто требования — это полное описание разрабатываемого 
программного обеспечения. 
В требованиях указываются свойства, качества и особенности разрабатываемой программы
Требования — это спецификация (описание) того, что должно быть реализовано.
Требования описывают то, что необходимо реализовать, без детализации технической стороны решения.
	Атрибуты требований:
Корректность — точное описание разрабатываемого функционала.
Проверяемость — формулировка требований таким образом, чтобы можно было выставить 
однозначный вердикт, выполнено все в соответствии с требованиями или нет.
Полнота — в требовании должна содержаться вся необходимая для реализации функциональности информация.
Недвусмысленность — требование должно содержать однозначные формулировки.
Непротиворечивость — требование не должно содержать внутренних противоречий и 
противоречий другим требованиям и документам.
Приоритетность — у каждого требования должен быть приоритет
(количественная оценка степени значимости требования).Этот атрибут позволит грамотно 
управлять ресурсами на проекте.
Атомарность — требование нельзя разбить на отдельные части без потери деталей.
Модифицируемость — в каждое требование можно внести изменение.
Прослеживаемость — каждое требование должно иметь уникальный идентификатор, по которому 
на него можно сослаться.







			Отчёт о тестировании (test progress report, test summary report)
документ который показывает нам то как прошло наше тестирование в рамках 
определенного временного промежутка
Test progress report. A document summarizing testing activities and results, produced at regular 
intervals, to report progress of testing activities against a baseline (such as the original test plan) 
and to communicate risks and alternatives requiring a decision to management. 
[ISTQB Glossary]
Test summary report. A document summarizing testing activities and results. It also contains 
an evaluation of the corresponding test items against exit criteria. 
[ISTQB Glossary]
	задачи:
• оценка объёма и качества выполненных работ;
• оценка текущего статуса и прогресса (в сравнении с планом);
• обозначение существующих и возможных проблем (если такие есть);
• формирование прогноза развития ситуации и фиксация рекомендаций по 
устранению проблем и повышению эффективности работы.

	типы отчетов
финальный
промежуточный(недельный, месячный, дневной, версионный(итерационный), финальный)
	разделы отчета по результатам тестирования
конкретных устоявшихся разделов для отчета - нет, это только некоторые из:
Краткое описание (summary). В предельно краткой форме отражает основные достижения, проблемы, выводы и 
  рекомендации. 
состав команды
сроки/расписание
описание процессов тестирования
дополнения к тестовым кейсам
статистика пройденных кейсов
критичные баги
результаты регрессионного тестирования
планы (только для промежуточных)
	ссылки (шаблоны отчетов)
https://vk.com/@usetalkrostov-otchet-o-testirovanii-reliza
https://www.performance-lab.ru/wp-content/themes/pureengineering/images/sitetesting/test_report_example.pdf







			Оценка трудозатрат в тестировании (эстимация)
эстимацию проводят менеджеры или специалисты middle++
	цели эстимации
определение сроков
оплата (Fixed Price известна сумма которую оплатит заказчик(не большой проект с малым кол-м изменений), 
Time & Material изначально неизвестна сумма заказа(удобно для Agile)для больших проектов)
оптимизация работы
и тд
	методы эстимации
Декомпозиция + By Test Cases(разбиение продукта на модули, фичи, таски)тесткейс единица измерения 
Based on Development(расчет времени от времени разработки, очень грубый метод)
По трем точкам(используется 3 временные точки)
На основе опыта
Пальцем в небо
Метод процентного распределения

	Декомпозиция + By Test Cases
расчет общего количества проверок на проекте(тест кейсов)
расчет средних затрат на один тест кейс(расчет среднего времени на выполнение всех тест кейсов)
  (время на написание 1го т.кейса + время на еговыполнение + умножение на общее кол. тестов)
определение количества возможных багов, и  на работу над 1 дефектом
расчет рисков и дополниттельного времени(коммуникация, изменения,подготовка чаще всего
это около 30%)
расчет общей суммы(времени)

	По трем точкам(О-оптимистичная точка, М(midle)-средняя, Р-пессимистическая)
(О + 4М + Р)/6
О - основная работа без рисков
P - времи с рисками
М - среднее время, наиболее вероятное
Стандартное отклонение
(Р - О)/6
