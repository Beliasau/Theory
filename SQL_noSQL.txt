			SQL
Structured Query Language — «язык структурированных запросов»
язык програмирования структурированных запросов

декларативный язык программирования, применяемый для создания, модификации и управления 
данными в реляционной базе данных, управляемой соответствующей системой управления базами данных.


изначальный набор операций SQL:
	создание в базе данных новой таблицы;
	добавление в таблицу новых записей;
	изменение записей;
	удаление записей;
	выборка записей из одной или нескольких таблиц (в соответствии с заданным условием);
	изменение структур таблиц.
со временем язык SQL усложнился


на основе SQL строятся СУБД(система управленя базой данных)
	MySql
	MS SQL
	Oracle
	Postgre Sql
	MongoDB



Язык SQL представляет собой совокупность операторов, инструкций, вычисляемых функций.
Операторы SQL делятся на:

операторы определения данных (Data Definition Language, DDL):
	CREATE создаёт объект базы данных (саму базу, таблицу, представление, пользователя и так далее),
	ALTER изменяет объект,
	DROP удаляет объект;
операторы манипуляции данными (Data Manipulation Language, DML):
	SELECT выбирает данные, удовлетворяющие заданным условиям,
	INSERT добавляет новые данные,
	UPDATE изменяет существующие данные,
	DELETE удаляет данные;
операторы определения доступа к данным (Data Control Language, DCL):
	GRANT предоставляет пользователю (группе) разрешения на определённые операции с объектом,
	REVOKE отзывает ранее выданные разрешения,
	DENY задаёт запрет, имеющий приоритет над разрешением;
операторы управления транзакциями (Transaction Control Language, TCL):
	COMMIT применяет транзакцию,
	ROLLBACK откатывает все изменения, сделанные в контексте текущей транзакции,
	SAVEPOINT делит транзакцию на более мелкие участки.


Как получить информацию из базы
Нужно записать свой запрос в понятном для базы виде — на SQL. 
SQL (Structured Query Language) — язык общения с базой данных. В нем есть ключевые слова, 
которые помогут сделать выборку:
select — выбери мне такие-то колонки...

from — из такой-то таблицы базы...

where — такую-то информацию...


					СУБД
Существует две модели СУБД - реляционная (на основе SQL(PostgreSQL. MySQL. SQLite.)) и безсхемная(NoSQL). 
Безсхемные СУБД основанные на принципах неструктурированного подхода избавляют программиста 
от проблем реляционной модели, в число которых входит низкая производительность и 
трудное масштабирование данных в горизонтальном формате.


					NoSQL
Неструктурированные(безсхемные) базы данных (NoSQL) создают структуру по ходу и 
убирают необходимость в создании жёстко определённых связей между данными. 
Здесь можно экспериментировать с разными способами доступа к тем или иным видам данных.
По принципу NoSQL работает база данных MongoDB. Они хранят все данные как единое целое в одной базе. 
При этом данные могут быть и одиночным объектом, но в то же время любой запрос не останется без ответа.
Каждая NoSQL имеет собственную систему запросов, что требует дополнительного изучения данной системы.


				Сравнение SQL и NoSQL
Если SQL-системы основаны исключительно на строгом представлении данных, 
то NoSQL-системы предоставляют свободу и способны работать с любым типом данных.

SQL-системы стандартизированы, за счёт чего запросы формируются с использованием языка SQL. 
В то же время NoSQL-системы базируются на специфической для каждой из них технологии, 
что является недостатком.

Масштабируемость. Обе СУБД способны обеспечить вертикальное масштабирование, то есть увеличить 
объём системных ресурсов на обработку данных. При этом NoSQL, будучи более новой разновидностью 
баз данных, позволяет применять простые методы горизонтального масштабирования.

В плане надёжности SQL обладает уверенным лидерством.

У SQL-баз есть качественная техническая поддержка за счёт их продолжительной истории, 
в то время как NoSQL-системы весьма молоды и и решить какую-либо проблему сложнее.

Хранение данных и доступ к их структурам в рамках реляционных систем лучше 
всего происходит в SQL-системах.

Таким образом, хоть NoSQL и является стремительно развивающейся разновидностью систем 
управления базами данных, однако на данном этапе рекомендуется остановить свой выбор на SQL.
Надёжность SQL-систем, особенно MySQL, подтверждается временем и массовостью. 
Сегодня любой уважающий себя ресурс использует для хранения данных именно систему MySQL.
